#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


class Solution
{
    public:
 
    bool ispar(string x)
    {
        stack<char> st;
        char z;
       int len=x.length(); 
       for(int i=0;i<len;i++){
           if(x[i]=='('||x[i]=='{'||x[i]=='['){
               st.push(x[i]);
               continue;
           }
           if(st.empty()){
               return false;
           }
           switch (x[i]){
           case ')':
           z=st.top();
           st.pop();
           if(z=='{'||z=='['){
               return false;
           }
           break;
           case '}':
           z=st.top();
           st.pop();
           if(z=='['|| z=='('){
               return false;
           }
           break;
           
           case ']':
           z=st.top();
           st.pop();
           if(z=='{'|| z=='('){
               return false;
           }
           break;
           }
       }
       return (st.empty());
    }

};

// { Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       Solution obj;
       if(obj.ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}  // } Driver Code Ends
